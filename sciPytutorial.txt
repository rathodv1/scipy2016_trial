functions


numpy for scientific 
------------------
creating arrays
---diff ways


operations are element-wise
in place multiplication
inbuilt math functions

x=array([1.,2,3,4])

size(x)
Out[27]: 4

x.size
Out[28]: 4

x.dtype
Out[29]: dtype('float64')

x.shape
Out[30]: (4L,)

L is long???

----------------
multidimensional arrays

 a=array([[0,1,2,3],[10,11,12,13]])

a.shape
Out[37]: (2L, 4L)

a.size
Out[38]: 8

a.itemsize
Out[39]: 4

a.dtype
Out[40]: dtype('int32')

a[1,3
]
Out[41]: 13

a
Out[42]: 
array([[ 0,  1,  2,  3],
       [10, 11, 12, 13]])

--------------------
Slicing arrays

a[0,1:3]

a**b - elementwise a^b


Bayes system>??
---------------

all matrix and vector operations are done using arrays
why matrix datatype is not used?




----------------
images
a=imread('lena.png')

imshow(a)
Out[99]: <matplotlib.image.AxesImage at 0xb913f60>

a.shape
Out[100]: (512L, 512L, 4L)
-------------

matrix opeations
dot()
inv(a)
det(a)
eig(a)
norm(e)
eigvals
svd(e)???


least square fit


L,t= pendulum
matrix(L, ones_like(L))
*
slope + constant


import scipy.stacks
